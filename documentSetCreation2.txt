jQuery(document).ready(function() {
	//var contentTypeId = "0x0120D520"; default document set content type ID
	var contentTypeId = "[Content Type ID -list]"
	var contentTypeName = "[CT Name]"
	var listName = "[List name]"
	var listUrl = _spPageContextInfo.webServerRelativeUrl + "/" + listName;
	var documentSetDisplayUrl = listUrl + "/Forms/" + encodeURIComponent(contentTypeName) + "/docsethomepage.aspx?ID="

	function getParameterByName(name) {
		var url = window.location.href;
		name = name.replace(/[\[\]]/g, "\\$&");
		var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
			results = regex.exec(url);
		if (!results) return null;
		if (!results[2]) return '';
		return decodeURIComponent(results[2].replace(/\+/g, " "));
	}

	function getListGuid(name) {
		var dfd = jQuery.Deferred();
		
		jQuery.ajax({
			type: 'GET',
			url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/GetByTitle('[List name]')",
			contentType: 'application/json',
			headers: {
				"Accept": "application/json;odata=verbose",
				"X-HTTP-Method": "GET",
			},
			success: function(data) {
				dfd.resolve(data && data.d ? data.d.Id : null);
			},
			error: function(error) {
				console.log(error);
			}
		});

		return dfd.promise();
	}

	function getUserId(email) {
		var dfd = jQuery.Deferred();

		jQuery.ajax({
			type: 'GET',
			url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/GetByTitle('User Information List')/Items?$filter=Name eq '" + encodeURIComponent("i:0#.f|membership|" + email) + "'",
			contentType: 'application/json',
			headers: {
				"Accept": "application/json;odata=verbose",
				"X-HTTP-Method": "GET",
			},
			success: function(data) {
				dfd.resolve(data && data.d && data.d.results.length > 0 ? data.d.results[0].Id : null);
			},
			error: function(error) {
				console.log(error);
			}
		});

		return dfd.promise();
	}

	function updateFolderProperties(folder, metadata, success, error) {
		return jQuery.ajax({
			type: 'POST',
			url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/GetByTitle('" + listName + "')/Items(" + folder.Id + ")",
			contentType: 'application/json',
			headers: {
				"Accept": "application/json;odata=verbose",
				"X-HTTP-Method": "MERGE",
				"X-RequestDigest": jQuery("#__REQUESTDIGEST").val(),
				"If-Match": "*"
			},
			data: JSON.stringify(metadata),
			success: function(data) {
				success(folder);
			},
			error: error
		});
	}

	function createDocumentSet(folderName, metadata, success, error) {
		var folderPayload = {
			'Title': folderName,
			'Path': listUrl
		};

		//Create Folder resource
		jQuery.ajax({
			url: _spPageContextInfo.webAbsoluteUrl + "/_vti_bin/listdata.svc/" + listName,
			type: "POST",
			contentType: "application/json;odata=verbose",
			data: JSON.stringify(folderPayload),
			headers: {
				"Accept": "application/json;odata=verbose",
				"Slug": listUrl + "/" + folderName + "|" + contentTypeId
			},
			success: function(data) {
				updateFolderProperties(data.d, metadata, success, error);
			},
			error: error
		});
	}

	function init(setName, metadata) {
		jQuery("#documentSetMessage").append('<p>Creating document set...</p>');
		createDocumentSet(setName, metadata,
			function(folder) {
				//console.log(folder);
				jQuery.when(getListGuid(listName)).done(function(guid) {
					if (guid) {
						var finalUrl = documentSetDisplayUrl + folder.Id + "&FolderCTID=" + contentTypeId + "&List=" + guid + "&RootFolder=" + encodeURIComponent(folder.Path + "/" + folder.Name);
						jQuery("#documentSetMessage").append('<a href="' + finalUrl + '">Document Set with name "' + setName + '" created. Click here to redirect to the library.</a>');
					}
				});
			},
			function(error) {
				jQuery("#documentSetError").append('<p>An error occured while creating the document set.</p>');
				jQuery("#documentSetError").append('<p>Troubleshooting tips:</p>');
				jQuery("#documentSetError").append('<ul><li>Ensure a document set with the given name does not already exist.</li><li>Ensure the name does not have any special characters.</li></ul>');
				console.log(error);
			}
		);
	}

	var email = getParameterByName('contact');
	var setName = getParameterByName('setName');


	var metadata = {
		'OpportunityID': getParameterByName('SFID');
		'AccountID': getParameterByName('Account');
		'Record Type': getParameterByName('RecType');
		'Grant Amount': getParameterByName('Amount');
		'Stage': getParameterByName('Stage');
		'Salesforce Link': getParameterByName('SFURL');
		'Agreement Leads': getParameterByName('contact');
	};

	if (email) {
		getUserId(email).then(function(userId) {
			metadata['PublishingContactId'] = userId;

			if (setName) {
				init(setName, metadata)
			}
		});
	} else {
		if (setName) {
			init(setName, metadata)
		}
	}
});
